@fib(n) {_n{-                   ; write n into the current cell and check if it's zero. If not, decrement it
              {^prev            ; check if it's 1 (if the current cell is 0) . If not, store n-1 in prev variable
                $fib(prev)      ; call the function fib recursively for n-1
                ^fibprev        ; store the result
                _prev           ; get n-1 into the current cell
                -               ; decrement it
                ^prevprev       ; store n-2 into prevprev
                $fib(prevprev)  ; another recursive call for, now for n-2
                +fibprev}       ; add fib(n-1) to the result
             {_1}}              ; return 1 if n == 1
          {_0}                  ; return 0 if n == 0
         }                      ; no need to return explicitly, but you are free to add \.

_12^x$fib(x)*                   ; store 12 into a variable named x and call fib. Print the result afterwards.
$fib(12)*                       ; or you can just call the function with an integer literal.
